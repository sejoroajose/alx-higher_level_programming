import unittest
matrix_divided = __import__('2-matrix_divided').matrix_divided

class TestMatrixDivide(unittest.TestCase):
	def test_valid_matrix_division(self):
		matrix = [[1, 2, 3], [4, 5, 6], [7, 8, 9]]
		div = 2
		expected_result = [[0.5, 1.0, 1.5], [2.0, 2.5, 3.0], [3.5, 4.0, 4.5]]
		self.assertEqual(matrix_divided(matrix, div), expected_result)
	
	def test_invalid_matrix_type(self):
		invalid_matrix = "not a matrix"
		div = 2
		with self.asserRaises(TypeError):
			matrix_divided(matrix, div)

	def test_rows_with_different_size(self):
		matrix = [[1, 2, 3], [4, 5], [6, 7, 8]]
		div = 2
		with self.asserRaises(TypeError):
			matrix_divided(matrix, div)

	def test_invalid_divisor(self):
                matrix = [[1, 2, 3], [4, 5, 6]] 
                invalid_div = "not_a_number"
                with self.asserRaises(TypeError):
                        matrix_divided(matrix, invalid_div)


	def test_division_by_zero(self):
                matrix = [[1, 2, 3], [4, 5, 6]] 
                div = 0
                with self.asserRaises(ZeroDivisionError):
                        matrix_divided(matrix, div)


if __name__ == '__main__':
	unittest.main()
